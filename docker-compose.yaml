services:
#  app:
#    build:
#      dockerfile: Dockerfile
#    ports:
#      - 8088:8088
##    environment:
##      DB_URL: "jdbc:postgresql://host.docker.internal:5433/matcher"
  db:
    image: postgres:16
    container_name: matcher_db
    user: root
    environment:
      POSTGRES_USER: matcher
      POSTGRES_PASSWORD: matcher
      POSTGRES_DB: matcher
    ports:
      - 5433:5433
    command: -p 5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "matcher" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - rzb

  liquibase:
    image: liquibase/liquibase:latest-alpine
    container_name: matcher-liquibase
    depends_on:
      db:
        condition: service_started
    environment:
      LIQUIBASE_LOG_LEVEL: debug
      LIQUIBASE_CLASSPATH: /liquibase/changelog
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://host.docker.internal:5433/matcher
      LIQUIBASE_COMMAND_USERNAME: matcher
      LIQUIBASE_COMMAND_PASSWORD: matcher
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.xml
#      LIQUIBASE_DATABASE: "matcher"
    volumes:
      - ./liquibase:/liquibase/changelog
    command:
      sh -c "liquibase update"

#     command:
#      sh -c "
#      liquibase --url=$$LIQUIBASE_COMMAND_URL --changeLogFile=$$LIQUIBASE_COMMAND_CHANGELOG_FILE --username=$$LIQUIBASE_COMMAND_USERNAME --password=$$LIQUIBASE_COMMAND_PASSWORD update
#      "
    networks:
      - rzb

networks:
  rzb: